{"version":3,"sources":["hooks/useLocalStorageState.js","Home.js","CardItem.js","CompanyCard.js","Search.js","JoblyApi.js","Spinner.js","AuthError.js","Companies.js","Job.js","helpers.js","Jobs.js","Company.js","Alert.js","LoginForm.js","Login.js","Profile.js","Routes.js","Navigation.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorageState","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","stringify","state","setState","useEffect","setItem","Home","currentUser","className","to","CardItem","name","description","logo_url","src","alt","icon","faBuilding","size","CompanyCard","handle","Search","searchFor","search","input","setInput","delayedSearchFor","useCallback","_","debounce","onSubmit","e","preventDefault","InputGroup","Label","htmlFor","Input","onChange","target","value","placeholder","InputGroupAddon","addonType","Button","color","BASE_URL","process","REACT_APP_BASE_URL","JoblyApi","endpoint","paramsOrData","verb","_token","console","debug","axios","method","url","data","error","response","message","Array","isArray","params","this","request","res","id","username","Spinner","AuthError","Companies","companies","setCompanies","isLoading","setIsLoading","a","getCompanies","render","length","map","Job","title","equity","salary","applyToJob","isApplied","setIsApplied","buttonRender","type","disabled","onClick","toFixed","replace","Jobs","companyJobs","jobs","setJobs","getJobs","Company","company","setCompany","setCompanyJobs","getCompany","filter","job","company_handle","getCompanyJobs","Alert","messages","role","m","LoginForm","login","register","getCurrentUser","usernameToStorage","activeView","view","setView","password","first_name","last_name","email","formData","setFormData","handleViewChange","handleFormChange","fData","handleFormSubmit","alert","signupFormRender","Login","tokenToStorage","history","useHistory","setMessages","handleLogin","loginUser","token","push","handleRegister","registerUser","Profile","photo_url","msgs","handleChange","handleSubmit","updateUser","user","Routes","exact","path","props","match","Navigation","setToken","setCurrUser","Navbar","NavbarBrand","href","Nav","NavItem","clear","App","setUser","setUsername","getUser","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2156d41d.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useLocalStorageState = (key, defaultValue) => {\r\n  const [state, setState] = useState(() => {\r\n    let value = JSON.parse(\r\n      window.localStorage.getItem(key) || JSON.stringify(defaultValue)\r\n    );\r\n    return value;\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nexport default useLocalStorageState;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = ({ currentUser }) => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"container text-center\">\r\n        <header>\r\n          <h1 className=\"mb-4 font-weight-bold\">Jobly</h1>\r\n        </header>\r\n        <p className=\"lead\">All the jobs in one, convenient place.</p>\r\n        {currentUser ? (\r\n          <h2>Welcome!</h2>\r\n        ) : (\r\n          <Link to=\"/login\" className=\"btn btn-primary font-weight-bold\">\r\n            Login\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./CardItem.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBuilding } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./FontAwesome.css\";\r\n\r\nconst CardItem = ({ name, description, logo_url }) => {\r\n  return (\r\n    <div className=\"CardItem card text-center\">\r\n      <div className=\"card-body\">\r\n        <h6 className=\"card-title d-flex justify-content-between mb-4\">\r\n          <span className=\"text-capitalize\">{name}</span>\r\n          {!logo_url ? (\r\n            <FontAwesomeIcon icon={faBuilding} size=\"2x\" className=\"building\" />\r\n          ) : (\r\n            <img src={logo_url} alt={`${name}} Logo`} />\r\n          )}\r\n        </h6>\r\n        <p className=\"card-text text-left\">{description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CardItem;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CardItem from \"./CardItem\";\r\nimport \"./CompanyCard.css\";\r\n\r\nconst CompanyCard = ({ handle, name, description, logo_url }) => {\r\n  return (\r\n    <div className=\"CompanyCard\">\r\n      <Link to={`/companies/${handle}`}>\r\n        <CardItem name={name} description={description} logo_url={logo_url} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CompanyCard;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { InputGroup, InputGroupAddon, Input, Button, Label } from \"reactstrap\";\r\nimport \"./Search.css\";\r\nimport _ from \"lodash\";\r\n\r\nconst Search = ({ searchFor }) => {\r\n  const [input, setInput] = useState({\r\n    search: \"\",\r\n  });\r\n\r\n  // delay the searchFor func, which is run alongside user input into the search bar\r\n  const delayedSearchFor = useCallback(\r\n    _.debounce((input) => searchFor(input), 500),\r\n    []\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    const input = { [name]: value };\r\n\r\n    setInput((input) => input);\r\n\r\n    delayedSearchFor(input);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Search\">\r\n      <form onSubmit={handleSubmit}>\r\n        <InputGroup size=\"lg\">\r\n          <Label htmlFor=\"search\"></Label>\r\n          <Input\r\n            onChange={handleChange}\r\n            name=\"search\"\r\n            placeholder=\"Enter search term...\"\r\n            value={input.value}\r\n          />\r\n          <InputGroupAddon addonType=\"append\">\r\n            <Button color=\"secondary\">Search</Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\r\n\r\nclass JoblyApi {\r\n  static async request(endpoint, paramsOrData = {}, verb = \"get\") {\r\n    paramsOrData._token = JSON.parse(window.localStorage.getItem(\"token\"));\r\n\r\n    console.debug(\"API Call:\", endpoint, paramsOrData, verb);\r\n\r\n    try {\r\n      return (\r\n        await axios({\r\n          method: verb,\r\n          url: `${BASE_URL}/${endpoint}`,\r\n          [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData,\r\n        })\r\n      ).data;\r\n      // axios sends query string data via the \"params\" key,\r\n      // and request body data via the \"data\" key,\r\n      // so the key we need depends on the HTTP verb\r\n    } catch (err) {\r\n      console.error(\"API Error:\", err.response);\r\n      let message = err.response.data.message;\r\n      throw Array.isArray(message) ? message : [message];\r\n    }\r\n  }\r\n\r\n  static async getCompanies(params = {}) {\r\n    let res = await this.request(`companies/`, params);\r\n    return res;\r\n  }\r\n\r\n  static async getCompany(handle) {\r\n    let res = await this.request(`companies/${handle}`);\r\n    return res;\r\n  }\r\n\r\n  static async getJobs(params = {}) {\r\n    let res = await this.request(`jobs/`, params);\r\n    return res;\r\n  }\r\n\r\n  static async getJob(id) {\r\n    let res = await this.request(`jobs/${id}`);\r\n    return res;\r\n  }\r\n\r\n  static async registerUser(data) {\r\n    let res = await this.request(`users/`, data, \"post\");\r\n    return res;\r\n  }\r\n\r\n  static async loginUser(data) {\r\n    let res = await this.request(`login/`, data, \"post\");\r\n    return res;\r\n  }\r\n\r\n  static async getUser(username) {\r\n    let res = await this.request(`users/${username}`);\r\n    return res;\r\n  }\r\n\r\n  static async updateUser(username, data) {\r\n    let res = await this.request(`users/${username}`, data, \"patch\");\r\n    return res;\r\n  }\r\n\r\n  static async applyToJob(id, data) {\r\n    let res = await this.request(`jobs/${id}/apply`, data, \"post\");\r\n    return res;\r\n  }\r\n}\r\n\r\nexport default JoblyApi;\r\n","import React from \"react\";\r\nimport { Spinner as Loading } from \"reactstrap\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <Loading className=\"Spinner\" color=\"info\" />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nconst AuthError = () => {\r\n  return <h2>You must be logged in to view</h2>;\r\n};\r\n\r\nexport default AuthError;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport Search from \"./Search\";\r\nimport JoblyApi from \"./JoblyApi\";\r\nimport Spinner from \"./Spinner\";\r\nimport AuthError from \"./AuthError\";\r\n\r\nconst Companies = ({ currentUser }) => {\r\n  const [companies, setCompanies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getCompanies() {\r\n      const { companies } = await JoblyApi.getCompanies();\r\n      setCompanies(companies);\r\n      setIsLoading(false);\r\n    }\r\n    getCompanies();\r\n  }, []);\r\n\r\n  const searchFor = async (search) => {\r\n    const { companies } = await JoblyApi.getCompanies(search);\r\n    setCompanies(companies);\r\n  };\r\n\r\n  const render = currentUser ? (\r\n    <div>\r\n      <Search searchFor={searchFor} />\r\n      {companies.length === 0 ? (\r\n        <p className=\"lead\">Sorry no companies match that search...</p>\r\n      ) : (\r\n        companies.map(({ handle, name, description, logo_url }) => (\r\n          <CompanyCard\r\n            key={handle}\r\n            handle={handle}\r\n            name={name}\r\n            description={description}\r\n            logo_url={logo_url}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <AuthError />\r\n  );\r\n\r\n  return (\r\n    <div className=\"col-md-8 offset-md-2\">\r\n      {isLoading ? <Spinner /> : render}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Companies;\r\n","import React, { useState } from \"react\";\r\nimport \"./Job.css\";\r\nimport { currencyFormat, formatPct } from \"./helpers\";\r\n\r\nconst Job = ({ id, title, equity, salary, state, applyToJob }) => {\r\n  const [isApplied, setIsApplied] = useState(false);\r\n\r\n  const handleClick = (e) => {\r\n    const { value } = e.target;\r\n\r\n    // value is the job id\r\n    applyToJob(value);\r\n    setIsApplied(true);\r\n  };\r\n\r\n  const buttonRender =\r\n    state === \"applied\" || isApplied ? (\r\n      <button\r\n        type=\"button\"\r\n        className=\"Job btn btn-primary font-weight-bold text-uppercase float-right disabled\"\r\n        disabled\r\n      >\r\n        Applied\r\n      </button>\r\n    ) : (\r\n      <button\r\n        onClick={handleClick}\r\n        type=\"button\"\r\n        className=\"Job btn btn-primary font-weight-bold text-uppercase float-right active\"\r\n        value={id}\r\n      >\r\n        Apply\r\n      </button>\r\n    );\r\n\r\n  return (\r\n    <div className=\"Job CardItem card\">\r\n      <div className=\"card-body\">\r\n        <h6 className=\"card-title d-flex justify-content-between mb-4\">\r\n          <span className=\"text-capitalize\">{title}</span>\r\n        </h6>\r\n        <div className=\"card-text\">Salary: {currencyFormat(salary)}</div>\r\n        <div className=\"card-text\">Equity: {formatPct(equity)}</div>\r\n        {buttonRender}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","function currencyFormat(num) {\r\n  return `$${num.toFixed(0).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")}`;\r\n}\r\n\r\nfunction formatPct(decimal) {\r\n  return `${decimal * 100}%`;\r\n}\r\n\r\nexport { currencyFormat, formatPct };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport JoblyApi from \"./JoblyApi\";\r\nimport Search from \"./Search\";\r\nimport Job from \"./Job\";\r\nimport Spinner from \"./Spinner\";\r\nimport AuthError from \"./AuthError\";\r\n\r\nconst Jobs = ({ companyJobs, currentUser }) => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getJobs() {\r\n      if (companyJobs && companyJobs.length !== 0) {\r\n        setJobs(companyJobs);\r\n      } else {\r\n        const { jobs } = await JoblyApi.getJobs();\r\n        setJobs(jobs);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n    getJobs();\r\n  }, []);\r\n\r\n  const searchFor = async (search) => {\r\n    const { jobs } = await JoblyApi.getJobs(search);\r\n    setJobs(jobs);\r\n  };\r\n\r\n  const applyToJob = async (id, data) => {\r\n    await JoblyApi.applyToJob(id, data);\r\n  };\r\n\r\n  const render = currentUser ? (\r\n    <div>\r\n      <Search searchFor={searchFor} />\r\n      {jobs.length === 0 ? (\r\n        <p className=\"lead\">Sorry no jobs match that search...</p>\r\n      ) : (\r\n        jobs.map(({ id, title, equity, salary, state }) => (\r\n          <Job\r\n            key={id}\r\n            id={id}\r\n            title={title}\r\n            equity={equity}\r\n            salary={salary}\r\n            state={state}\r\n            applyToJob={applyToJob}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  ) : (\r\n    <AuthError />\r\n  );\r\n\r\n  return (\r\n    <div className=\"col-md-8 offset-md-2\">\r\n      {isLoading ? (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      ) : (\r\n        render\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Jobs from \"./Jobs\";\r\nimport JoblyApi from \"./JoblyApi\";\r\nimport AuthError from \"./AuthError\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst Company = ({ handle, currentUser }) => {\r\n  const [company, setCompany] = useState({});\r\n  const [companyJobs, setCompanyJobs] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function getCompany(handle) {\r\n      const { company } = await JoblyApi.getCompany(handle);\r\n      setCompany(company);\r\n      setIsLoading(false);\r\n    }\r\n    getCompany(handle);\r\n  }, [handle, setCompany]);\r\n\r\n  useEffect(() => {\r\n    async function getCompanyJobs(handle) {\r\n      const { jobs } = await JoblyApi.getJobs();\r\n      const companyJobs = jobs.filter((job) => job.company_handle === handle);\r\n      setCompanyJobs(companyJobs);\r\n      setIsLoading(false);\r\n    }\r\n    getCompanyJobs(handle);\r\n  }, [handle, setCompany]);\r\n\r\n  const render = currentUser ? (\r\n    <>\r\n      <h5 className=\"text-capitalize\">{company.name}</h5>\r\n      <p>{company.description}</p>\r\n      <Jobs\r\n        companyJobs={companyJobs}\r\n        isLoading={isLoading}\r\n        currentUser={currentUser}\r\n      />\r\n    </>\r\n  ) : (\r\n    <AuthError />\r\n  );\r\n\r\n  return isLoading ? <Spinner /> : render;\r\n};\r\n\r\nexport default Company;\r\n","import React from \"react\";\r\n\r\nconst Alert = ({ type, messages }) => {\r\n  return (\r\n    <div className={`alert alert-${type} fade show`} role=\"alert\">\r\n      {messages.map((m) => (\r\n        <p key={m} className=\"mb-0 small\">\r\n          {m}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState } from \"react\";\r\nimport \"./LoginForm.css\";\r\nimport Alert from \"./Alert\";\r\n\r\nconst LoginForm = ({\r\n  login,\r\n  register,\r\n  messages,\r\n  getCurrentUser,\r\n  usernameToStorage,\r\n}) => {\r\n  const [view, setView] = useState({\r\n    activeView: \"login\",\r\n  });\r\n\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const handleViewChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    if (value === \"login\") {\r\n      setView({ activeView: \"login\" });\r\n    }\r\n    if (value === \"signup\") {\r\n      setView({ activeView: \"signup\" });\r\n    }\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((fData) => ({ ...fData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // assess the current view and either log in or register accordingly\r\n    if (view.activeView === \"login\") {\r\n      await login(formData);\r\n      await getCurrentUser(formData.username);\r\n      usernameToStorage(formData.username);\r\n    } else if (view.activeView === \"signup\") {\r\n      await register(formData);\r\n      await getCurrentUser(formData.username);\r\n      usernameToStorage(formData.username);\r\n    } else {\r\n      alert(\"Hmmm, that didn't work. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const { username, password, first_name, last_name, email } = formData;\r\n\r\n  const signupFormRender = (\r\n    <>\r\n      <div className=\"form-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <label htmlFor=\"first_name\">First Name</label>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"LoginForm form-control\"\r\n          id=\"first-name\"\r\n          name=\"first_name\"\r\n          onChange={handleFormChange}\r\n          value={first_name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <label htmlFor=\"last_name\">Last Name</label>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"LoginForm form-control\"\r\n          id=\"last-name\"\r\n          name=\"last_name\"\r\n          onChange={handleFormChange}\r\n          value={last_name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <div className=\"input-group-prepend\">\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n        <input\r\n          type=\"email\"\r\n          className=\"LoginForm form-control\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          onChange={handleFormChange}\r\n          value={email}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n\r\n  const { activeView } = view;\r\n\r\n  return (\r\n    <div className=\"LoginForm container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\r\n      <div className=\"d-flex justify-content-end\">\r\n        <div className=\"btn-group\">\r\n          <button\r\n            onClick={handleViewChange}\r\n            className={`LoginForm btn btn-primary ${\r\n              activeView === \"login\" ? \"active\" : \"\"\r\n            }`}\r\n            value=\"login\"\r\n          >\r\n            Login\r\n          </button>\r\n          <button\r\n            onClick={handleViewChange}\r\n            className={`LoginForm btn btn-primary ${\r\n              activeView === \"signup\" ? \"active\" : \"\"\r\n            }`}\r\n            value=\"signup\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleFormSubmit}>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"username\">Username</label>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"LoginForm form-control\"\r\n                name=\"username\"\r\n                onChange={handleFormChange}\r\n                value={username}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"password\">Password</label>\r\n              </div>\r\n              <input\r\n                type=\"password\"\r\n                className=\"LoginForm form-control\"\r\n                name=\"password\"\r\n                onChange={handleFormChange}\r\n                value={password}\r\n              />\r\n            </div>\r\n            {activeView === \"signup\" && signupFormRender}\r\n            {messages.length > 0 && (\r\n              <Alert type={\"danger\"} messages={messages} />\r\n            )}\r\n            <button className=\"LoginForm submit btn btn-primary\">Submit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport JoblyApi from \"./JoblyApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = ({ tokenToStorage, getCurrentUser, usernameToStorage }) => {\r\n  const history = useHistory();\r\n  const [messages, setMessages] = useState({ messages: [] });\r\n\r\n  // log the user in and get a token\r\n  const handleLogin = async (data) => {\r\n    try {\r\n      const { token } = await JoblyApi.loginUser(data);\r\n      tokenToStorage(token);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      setMessages({ messages: e });\r\n    }\r\n  };\r\n\r\n  // register the user in and get a token\r\n  const handleRegister = async (data) => {\r\n    try {\r\n      const { token } = await JoblyApi.registerUser(data);\r\n      tokenToStorage(token);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      setMessages({ messages: e });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoginForm\r\n      login={handleLogin}\r\n      register={handleRegister}\r\n      messages={messages.messages}\r\n      getCurrentUser={getCurrentUser}\r\n      usernameToStorage={usernameToStorage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AuthError from \"./AuthError\";\r\nimport \"./Profile.css\";\r\nimport JoblyApi from \"./JoblyApi\";\r\nimport Alert from \"./Alert\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst Profile = ({ currentUser }) => {\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    photo_url: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setFormData({\r\n        first_name: currentUser.first_name,\r\n        last_name: currentUser.last_name,\r\n        email: currentUser.email,\r\n        photo_url: currentUser.photo_url || \"\",\r\n        password: \"\",\r\n      });\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const [msgs, setMessages] = useState({ messages: [], type: \"\" });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData((fData) => ({\r\n      ...fData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { user } = await JoblyApi.updateUser(\r\n        currentUser.username,\r\n        formData\r\n      );\r\n\r\n      // set the form inputs to be the newly updated user info\r\n      setFormData((fData) => ({\r\n        ...fData,\r\n        ...user,\r\n        password: \"\",\r\n      }));\r\n\r\n      setMessages({ messages: [\"user updated successfully\"], type: \"success\" });\r\n    } catch (e) {\r\n      setMessages({ messages: e, type: \"danger\" });\r\n    }\r\n  };\r\n\r\n  const { first_name, last_name, email, photo_url, password } = formData;\r\n  const { messages, type } = msgs;\r\n\r\n  const render = currentUser ? (\r\n    <div className=\"Profile col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"username\">Username</label>\r\n              </div>\r\n              <p className=\"form-control-plaintext d-flex justify-content-start\">\r\n                {currentUser.username}\r\n              </p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"first_name\">First Name</label>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"Profile form-control\"\r\n                id=\"first-name\"\r\n                name=\"first_name\"\r\n                onChange={handleChange}\r\n                value={first_name}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"last_name\">Last Name</label>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                className=\"Profile form-control\"\r\n                id=\"last-name\"\r\n                name=\"last_name\"\r\n                onChange={handleChange}\r\n                value={last_name}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <input\r\n                type=\"email\"\r\n                className=\"Profile form-control\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                value={email}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"photo_url\">Photo URL</label>\r\n              </div>\r\n              <input\r\n                type=\"url\"\r\n                className=\"Profile form-control\"\r\n                id=\"photo-url\"\r\n                name=\"photo_url\"\r\n                onChange={handleChange}\r\n                value={photo_url}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <label htmlFor=\"password\">Password</label>\r\n              </div>\r\n              <input\r\n                type=\"password\"\r\n                className=\"Profile form-control\"\r\n                id=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                value={password}\r\n              />\r\n            </div>\r\n            {messages.length > 0 && <Alert type={type} messages={messages} />}\r\n            {password.length > 0 ? (\r\n              <button\r\n                className={`Profile btn btn-primary btn-block mt-4 ${\r\n                  password.length > 0 ? \"\" : \"disabled\"\r\n                }`}\r\n              >\r\n                Save Changes\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className={`Profile btn btn-primary btn-block mt-4 ${\r\n                  password.length > 0 ? \"\" : \"disabled\"\r\n                }`}\r\n                disabled\r\n              >\r\n                Save Changes\r\n              </button>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <AuthError />\r\n  );\r\n\r\n  return <div>{currentUser !== null ? render : <Spinner />}</div>;\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Home from \"./Home\";\r\nimport Companies from \"./Companies\";\r\nimport Company from \"./Company\";\r\nimport Jobs from \"./Jobs\";\r\nimport Login from \"./Login\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst Routes = ({\r\n  tokenToStorage,\r\n  getCurrentUser,\r\n  currentUser,\r\n  usernameToStorage,\r\n}) => {\r\n  const renderCompany = (props) => {\r\n    const { handle } = props.match.params;\r\n    return <Company handle={handle} currentUser={currentUser} />;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <Login\r\n            tokenToStorage={tokenToStorage}\r\n            getCurrentUser={getCurrentUser}\r\n            usernameToStorage={usernameToStorage}\r\n          />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Home currentUser={currentUser} />\r\n        </Route>\r\n        <Route exact path=\"/companies\">\r\n          <Companies currentUser={currentUser} />\r\n        </Route>\r\n        <Route exact path=\"/jobs\">\r\n          <Jobs currentUser={currentUser} />\r\n        </Route>\r\n        <Route exact path=\"/companies/:handle\" render={renderCompany} />\r\n        <Route exact path=\"/profile\">\r\n          <Profile currentUser={currentUser} />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ currentUser, setToken, setCurrUser }) => {\r\n  const handleLogout = () => {\r\n    window.localStorage.clear();\r\n    setToken(null);\r\n    setCurrUser({ currentUser: null });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Navigation\">\r\n      <Navbar className=\"Navigation navbar-expand-md\">\r\n        <NavbarBrand href=\"/\">Jobly</NavbarBrand>\r\n        {currentUser ? (\r\n          <Nav className=\"ml-auto\">\r\n            <NavItem className=\"mr-4\">\r\n              <NavLink exact to=\"/companies\">\r\n                Companies\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"mr-4\">\r\n              <NavLink exact to=\"/jobs\">\r\n                Jobs\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"mr-4\">\r\n              <NavLink exact to=\"/profile\">\r\n                Profile\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem className=\"logout mr-4\">\r\n              <NavLink exact to=\"/\" onClick={handleLogout}>\r\n                Logout\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        ) : (\r\n          <Nav className=\"login ml-auto\">\r\n            <NavItem>\r\n              <NavLink className=\"mr-4\" exact to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        )}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorageState from \"./hooks/useLocalStorageState\";\n\nimport Routes from \"./Routes\";\nimport Navigation from \"./Navigation\";\nimport JoblyApi from \"./JoblyApi\";\n\nfunction App() {\n  const [user, setUser] = useState({ currentUser: null });\n  const [token, setToken] = useLocalStorageState(\"token\", null);\n  const [username, setUsername] = useLocalStorageState(\"username\", null);\n\n  const tokenToStorage = (token) => {\n    setToken(token);\n  };\n\n  const usernameToStorage = (username) => {\n    setUsername(username);\n  };\n\n  useEffect(() => {\n    async function getUser() {\n      const { user } = await JoblyApi.getUser(username);\n      setUser({ currentUser: user });\n    }\n    getUser();\n  }, [username, token]);\n\n  const getCurrentUser = (username) => {\n    setUsername({ username });\n  };\n\n  const { currentUser } = user;\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navigation\n          currentUser={currentUser}\n          setToken={setToken}\n          setCurrUser={setUser}\n        />\n        <div className=\"pt-5\">\n          <Routes\n            tokenToStorage={tokenToStorage}\n            getCurrentUser={getCurrentUser}\n            currentUser={currentUser}\n            usernameToStorage={usernameToStorage}\n          />\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}